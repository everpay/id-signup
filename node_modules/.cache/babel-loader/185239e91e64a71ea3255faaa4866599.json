{"ast":null,"code":"var _jsxFileName = \"/Users/everpay/Documents/GitHub/Everpay/id-signup/src/components/UserMainInfo.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport businessType from '../utils/businessType';\nimport { TextInput, Pane, Text, Select, Button, Spinner } from 'evergreen-ui';\nimport * as Yup from 'yup';\nimport { Formik, Form, Field } from 'formik';\nimport Datetime from 'react-datetime';\nimport ReactFlagsSelect from 'react-flags-select';\nimport 'react-flags-select/css/react-flags-select.css';\nimport Loader from './loader';\nconst phoneRegExp = /^\\+(?:[0-9] ?){6,14}[0-9]$/;\nconst UserMainInfoSchema = {\n  individual: Yup.object().shape({\n    firstName: Yup.string().required('Please enter first name'),\n    lastName: Yup.string().required('Please enter last name'),\n    acceptCards: Yup.string().required('Please select payment mode information'),\n    taxID: Yup.string().required('Please enter tax ID'),\n    address1: Yup.string().required('Please enter first address'),\n    cityName: Yup.string().required('Please enter city name'),\n    postalCode: Yup.string().required('Please enter postal code'),\n    phoneNumber: Yup.string().required('Please enter phone number').matches(phoneRegExp, 'Phone number is not valid'),\n    DOB: Yup.string().required('Please select date of birth'),\n    ssn: Yup.string().min(4, 'You can not enter less than 4 char').max(4., 'you can not enter more than 4 char').required('Please enter postal code')\n  }),\n  business: Yup.object().shape({\n    firstName: Yup.string().required('Please enter first name'),\n    lastName: Yup.string().required('Please enter last name'),\n    businessType: Yup.string().required('Please select type of the business'),\n    businessCategories: Yup.string().required('Please select category of the business'),\n    acceptCards: Yup.string().required('Please select payment mode information'),\n    businessName: Yup.string().required('Please enter business name'),\n    taxID: Yup.string().required('Please enter tax ID'),\n    address1: Yup.string().required('Please enter first address'),\n    cityName: Yup.string().required('Please enter city name'),\n    postalCode: Yup.string().required('Please enter postal code'),\n    businessDescription: Yup.string().required('Please enter business description'),\n    phoneNumber: Yup.string().required('Please enter phone number').matches(phoneRegExp, 'Phone number is not valid'),\n    DOB: Yup.string().required('Please select date of birth'),\n    ssn: Yup.string().min(4, 'You can not enter less than 4 char').max(4., 'you can not enter more than 4 char').required('Please enter postal code')\n  })\n};\nexport class UserMainInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.back = e => {\n      e.preventDefault();\n      this.props.prevStep();\n    };\n\n    this.doSignUp = data => {\n      this.setState({\n        loader: true\n      }); // axios.post(`http://localhost:3001/users/sign-up`, data)\n\n      axios.post(`https://kwikpay-signup-api.herokuapp.com/users/sign-up`, data).then(res => {\n        this.setState({\n          loader: true\n        });\n\n        if (res.data.error) {\n          this.setState({\n            message: res.data.message\n          });\n        } else {\n          window.location.href = 'https://upbeat-morse-c5a699.netlify.app/do-login';\n        }\n      }).catch(function (error) {\n        this.setState({\n          loader: true\n        });\n        console.log('Error on Authentication');\n      });\n    };\n\n    this.state = {\n      message: '',\n      loader: false\n    };\n  }\n\n  // saveSignUp = () => {\n  //   const token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IlpqUm1ZVE13TlRKak9XVTVNbUl6TWpnek5ESTNZMkl5TW1JeVkyRXpNamRoWmpWaU1qYzBaZz09In0.eyJhdWQiOiJodHRwOlwvXC9vcmcud3NvMi5hcGltZ3RcL2dhdGV3YXkiLCJzdWIiOiJhZG1pbkBjYXJib24uc3VwZXIiLCJhcHBsaWNhdGlvbiI6eyJvd25lciI6ImFkbWluIiwidGllciI6IlVubGltaXRlZCIsIm5hbWUiOiJEZWZhdWx0QXBwbGljYXRpb24iLCJpZCI6MSwidXVpZCI6bnVsbH0sInNjb3BlIjoiYW1fYXBwbGljYXRpb25fc2NvcGUgZGVmYXVsdCIsImlzcyI6Imh0dHBzOlwvXC9sb2NhbGhvc3Q6OTQ0M1wvb2F1dGgyXC90b2tlbiIsInRpZXJJbmZvIjp7IlVubGltaXRlZCI6eyJzdG9wT25RdW90YVJlYWNoIjp0cnVlLCJzcGlrZUFycmVzdExpbWl0IjowLCJzcGlrZUFycmVzdFVuaXQiOm51bGx9fSwia2V5dHlwZSI6IlBST0RVQ1RJT04iLCJzdWJzY3JpYmVkQVBJcyI6W3sic3Vic2NyaWJlclRlbmFudERvbWFpbiI6ImNhcmJvbi5zdXBlciIsIm5hbWUiOiJLaWxsQmlsbCIsImNvbnRleHQiOiJcL2tpbGxiaWxsXC8xLjAiLCJwdWJsaXNoZXIiOiJhZG1pbiIsInZlcnNpb24iOiIxLjAiLCJzdWJzY3JpcHRpb25UaWVyIjoiVW5saW1pdGVkIn1dLCJjb25zdW1lcktleSI6ImpleGxVeVVvcmRqVGhqb0ZMazRSbEE2S0Jvb2EiLCJleHAiOjM3NDIzOTk0OTIsImlhdCI6MTU5NDkxNTg0NSwianRpIjoiM2U3YjVjYzQtMTIxZS00MGYzLWFhNmEtMTAxNDczOWUwYmQ5In0.ReaMROXD9GuvXsMFnaHNx2FUu9YRYUo-jXljSDCuzt_x2BVfHfhq0R5XAH1TwY_ipAYXdBWNG83FMEptQv4IRvgM_ZIh6gXOZLarqlKe6KrUdHG9heJQVedlCbMBXcqq8KFh9irj_ATa1hSQu0HzGYc12QRm3h84jufF-LPlGCUwtRdcaNWmYQmSeWuOVF_dJTSEISz4lrvLloqn66g5naY0QySs5oXT8s23ACnqw89aYYFWCcADriCiiVTggmLD1b2VsaqT6y6Ih_pMsarofEeQIuUF7HOTUymjXZoD1KBCZksFiJYJ8Jt7Fx0_DHPQ9aJx51IvyORhZT_R1K1GUg';\n  //   const headers = {\n  //     headers: {\n  //       'Authorization': `Bearer ${token}`,\n  //       'X-Killbill-ApiSecret': 'telecomUser',\n  //       'X-Killbill-ApiKey': 'telecomUser007',\n  //       'X-Killbill-CreatedBy': 'wso2-killbill',\n  //       'Access-Control-Allow-Origin': '*',\n  //       'Access-Control-Allow-Methods': 'POST'\n  //     }\n  //   }\n  //   let data = JSON.parse(localStorage.getItem('data'));\n  //   const mainData = {\n  //     \"name\": data['userMainInfo']['firstName'] + ' ' + data['userMainInfo']['lastName'],\n  //     \"firstNameLength\": data['userMainInfo']['firstName'].length,\n  //     \"email\": data['UserInfo']['email'],\n  //     \"address1\": data['userMainInfo']['address1'],\n  //     \"postalCode\": data['userMainInfo']['postalCode'],\n  //     \"city\": data['userMainInfo']['cityName'],\n  //     \"country\": data['UserInfo']['country'],\n  //     \"phone\": data['userMainInfo']['phoneNumber']\n  //   }\n  //   axios.post(`https://enki.goeverpay.com/1.0/kb/accounts`, mainData, headers)\n  //     .then(res => {\n  //       console.log(res);\n  //       console.log(res.data);\n  //     }).catch(function (error) {\n  //       console.log('Error on Authentication');\n  //     });\n  // }\n  render() {\n    const {\n      isAuthenticated,\n      login\n    } = this.props.auth;\n    const initialValues = {\n      'individual': {\n        firstName: '',\n        lastName: '',\n        acceptCards: '',\n        taxID: '',\n        address1: '',\n        address2: '',\n        cityName: '',\n        postalCode: '',\n        phoneNumber: '',\n        websiteUrl: '',\n        DOB: '',\n        ssn: ''\n      },\n      'business': {\n        firstName: '',\n        lastName: '',\n        businessType: '',\n        businessCategories: '',\n        acceptCards: '',\n        businessName: '',\n        taxID: '',\n        address1: '',\n        address2: '',\n        cityName: '',\n        postalCode: '',\n        phoneNumber: '',\n        websiteUrl: '',\n        businessDescription: '',\n        DOB: '',\n        ssn: ''\n      }\n    };\n    const {\n      merchant: {\n        businessType,\n        individual\n      }\n    } = this.props.otherComponentData;\n    console.log('-----this.props--', this.props.otherComponentData, individual);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signUpForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      loading: this.state.loader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Formik, {\n      initialValues: initialValues[businessType],\n      validationSchema: UserMainInfoSchema[businessType],\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setSubmitting(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }\n    }, ({\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      isSubmitting,\n      setFieldValue,\n      submitForm\n    }) => /*#__PURE__*/React.createElement(\"form\", {\n      autoComplete: \"off\",\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signUpBody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Pane, {\n      className: \"row\",\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      size: 300,\n      lineHeight: \"23px\",\n      fontWeight: \"500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 23\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(TextInput, {\n      height: 40,\n      width: \"100%\",\n      name: \"firstName\",\n      placeholder: \"First Name\",\n      type: \"text\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.firstName,\n      isInvalid: errors.firstName && touched.firstName ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 23\n      }\n    }), errors.firstName && touched.firstName ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error_span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 25\n      }\n    }, errors.firstName) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      size: 300,\n      lineHeight: \"23px\",\n      fontWeight: \"500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 23\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(TextInput, {\n      height: 40,\n      width: \"100%\",\n      name: \"lastName\",\n      placeholder: \"Last Name\",\n      type: \"text\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.lastName,\n      isInvalid: errors.lastName && touched.lastName ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 23\n      }\n    }), errors.lastName && touched.lastName ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error_span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 25\n      }\n    }, errors.lastName) : null), !individual ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      size: 300,\n      lineHeight: \"23px\",\n      fontWeight: \"500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 25\n      }\n    }, \"Business Type\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      width: \"100%\",\n      height: 40,\n      name: \"businessType\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.businessType,\n      isInvalid: errors.businessType && touched.businessType ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 29\n      }\n    }, \"Select business type...\"), Object.keys(businessType).map((business, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: business,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 33\n        }\n      }, business);\n    })), errors.businessType && touched.businessType ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error_span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 29\n      }\n    }, errors.businessType) : null)) : null, !individual ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      size: 300,\n      lineHeight: \"23px\",\n      fontWeight: \"500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 25\n      }\n    }, \"Business Categories\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      width: \"100%\",\n      height: 40,\n      name: \"businessCategories\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.businessCategories,\n      isInvalid: errors.businessCategories && touched.businessCategories ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 29\n      }\n    }, \"Select business category...\"), values.businessType && businessType[values.businessType].map((businessCategory, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: businessCategory,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 33\n        }\n      }, businessCategory);\n    })), errors.businessCategories && touched.businessCategories ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error_span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 29\n      }\n    }, errors.businessCategories) : null)) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      size: 300,\n      lineHeight: \"23px\",\n      fontWeight: \"500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 23\n      }\n    }, \"Do you currently accept debit or credit?\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      width: \"100%\",\n      height: 40,\n      name: \"acceptCards\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.acceptCards,\n      isInvalid: errors.acceptCards && touched.acceptCards ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 27\n      }\n    }, \"Please select...\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Yes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 27\n      }\n    }, \"Yes, we accept credit cards\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 27\n      }\n    }, \"No, we do not accept credit cards\")), errors.acceptCards && touched.acceptCards ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error_span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 27\n      }\n    }, errors.acceptCards) : null)), !individual ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      size: 300,\n      lineHeight: \"23px\",\n      fontWeight: \"500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 25\n      }\n    }, \"Business Name\"), /*#__PURE__*/React.createElement(TextInput, {\n      height: 40,\n      width: \"100%\",\n      name: \"businessName\",\n      placeholder: \"Business Name\",\n      type: \"text\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.businessName,\n      isInvalid: errors.businessName && touched.businessName ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 25\n      }\n    }), errors.businessName && touched.businessName ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error_span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 27\n      }\n    }, errors.businessName) : null) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      size: 300,\n      lineHeight: \"23px\",\n      fontWeight: \"500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 23\n      }\n    }, \"Tax ID\"), /*#__PURE__*/React.createElement(TextInput, {\n      height: 40,\n      width: \"100%\",\n      name: \"taxID\",\n      placeholder: \"Tax ID\",\n      type: \"text\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.taxID,\n      isInvalid: errors.taxID && touched.taxID ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 23\n      }\n    }), errors.taxID && touched.taxID ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error_span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 25\n      }\n    }, errors.taxID) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      size: 300,\n      lineHeight: \"23px\",\n      fontWeight: \"500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 23\n      }\n    }, \"Address 1\"), /*#__PURE__*/React.createElement(TextInput, {\n      height: 40,\n      width: \"100%\",\n      name: \"address1\",\n      placeholder: \"Address 1\",\n      type: \"text\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.address1,\n      isInvalid: errors.address1 && touched.address1 ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 23\n      }\n    }), errors.address1 && touched.address1 ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error_span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 25\n      }\n    }, errors.address1) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      size: 300,\n      lineHeight: \"23px\",\n      fontWeight: \"500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 23\n      }\n    }, \"Address 2\"), /*#__PURE__*/React.createElement(TextInput, {\n      height: 40,\n      width: \"100%\",\n      name: \"address2\",\n      placeholder: \"Address 2 (Optional)\",\n      type: \"text\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.address2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      size: 300,\n      lineHeight: \"23px\",\n      fontWeight: \"500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 23\n      }\n    }, \"City\"), /*#__PURE__*/React.createElement(TextInput, {\n      height: 40,\n      width: \"100%\",\n      name: \"cityName\",\n      placeholder: \"City\",\n      type: \"text\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.cityName,\n      isInvalid: errors.cityName && touched.cityName ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 23\n      }\n    }), errors.cityName && touched.cityName ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error_span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 25\n      }\n    }, errors.cityName) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      size: 300,\n      lineHeight: \"23px\",\n      fontWeight: \"500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 23\n      }\n    }, \"Postal Code\"), /*#__PURE__*/React.createElement(TextInput, {\n      height: 40,\n      width: \"100%\",\n      name: \"postalCode\",\n      placeholder: \"Postal Code\",\n      type: \"text\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.postalCode,\n      isInvalid: errors.postalCode && touched.postalCode ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 23\n      }\n    }), errors.postalCode && touched.postalCode ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error_span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 25\n      }\n    }, errors.postalCode) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      size: 300,\n      lineHeight: \"23px\",\n      fontWeight: \"500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 23\n      }\n    }, \"Phone Number\"), /*#__PURE__*/React.createElement(TextInput, {\n      height: 40,\n      width: \"100%\",\n      name: \"phoneNumber\",\n      placeholder: \"Phone Number\",\n      type: \"text\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.phoneNumber,\n      isInvalid: errors.phoneNumber && touched.phoneNumber ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 23\n      }\n    }), errors.phoneNumber && touched.phoneNumber ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error_span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 25\n      }\n    }, errors.phoneNumber) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      size: 300,\n      lineHeight: \"23px\",\n      fontWeight: \"500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 23\n      }\n    }, \"Website\"), /*#__PURE__*/React.createElement(TextInput, {\n      className: \"everGreenInput\",\n      height: 40,\n      width: \"100%\",\n      name: \"websiteUrl\",\n      placeholder: \"Website (Optional)\",\n      type: \"text\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.websiteUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 23\n      }\n    })), !individual ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      size: 300,\n      lineHeight: \"23px\",\n      fontWeight: \"500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 25\n      }\n    }, \"Business Description\"), /*#__PURE__*/React.createElement(TextInput, {\n      height: 40,\n      width: \"100%\",\n      name: \"businessDescription\",\n      placeholder: \"Business Description\",\n      type: \"text\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.businessDescription,\n      isInvalid: errors.businessDescription && touched.businessDescription ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 25\n      }\n    }), errors.businessDescription && touched.businessDescription ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error_span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 27\n      }\n    }, errors.businessDescription) : null) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      size: 300,\n      lineHeight: \"23px\",\n      fontWeight: \"500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 23\n      }\n    }, \"Date of Birth\"), /*#__PURE__*/React.createElement(Datetime, {\n      inputProps: {\n        className: 'everGreenDate flag-select',\n        placeholder: ' MM/DD/YYYY',\n        name: 'DOB'\n      },\n      dateFormat: \"MM/DD/YYYY\",\n      timeFormat: false,\n      height: 40,\n      width: \"100%\",\n      onChange: momentObj => {\n        if (typeof momentObj === 'object') {\n          setFieldValue('DOB', momentObj.format(\"MM/DD/YYYY\"));\n        } else {\n          setFieldValue('DOB', '');\n        }\n      },\n      value: values.DOB,\n      isInvalid: errors.DOB && touched.DOB ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 23\n      }\n    }), errors.DOB && touched.DOB ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error_span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 25\n      }\n    }, errors.DOB) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      size: 300,\n      lineHeight: \"23px\",\n      fontWeight: \"500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 23\n      }\n    }, \"Last 4 digit of SSN or ITIN\"), /*#__PURE__*/React.createElement(TextInput, {\n      height: 40,\n      width: \"100%\",\n      name: \"ssn\",\n      placeholder: \"Last 4 digit of SSN or ITIN\",\n      type: \"text\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.ssn,\n      isInvalid: errors.ssn && touched.ssn ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 23\n      }\n    }), errors.ssn && touched.ssn ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error_span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 25\n      }\n    }, errors.ssn) : null))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signUpFooter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 17\n      }\n    }, this.state.message && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center textn-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 21\n      }\n    }, this.state.message), /*#__PURE__*/React.createElement(Pane, {\n      className: \"row\",\n      display: \"flex\",\n      alignItems: \"center\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btnMain\",\n      width: \"100%\",\n      height: 40,\n      justifyContent: \"center\",\n      appearance: \"primary\",\n      textTransform: \"uppercase\",\n      onClick: this.back,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 23\n      }\n    }, \"Back\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btnMain\",\n      width: \"100%\",\n      height: 40,\n      justifyContent: \"center\",\n      appearance: \"primary\",\n      textTransform: \"uppercase\",\n      onClick: e => {\n        e.preventDefault();\n        submitForm();\n\n        if (Object.entries(errors).length == 0) {\n          let data = this.props.otherComponentData;\n          data['userMainInfo'] = values; // localStorage.setItem(\"data\", JSON.stringify(data));\n\n          this.doSignUp(data);\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 23\n      }\n    }, \"Sign Up\")))))));\n  }\n\n}\nexport default UserMainInfo;","map":{"version":3,"sources":["/Users/everpay/Documents/GitHub/Everpay/id-signup/src/components/UserMainInfo.js"],"names":["React","Component","axios","businessType","TextInput","Pane","Text","Select","Button","Spinner","Yup","Formik","Form","Field","Datetime","ReactFlagsSelect","Loader","phoneRegExp","UserMainInfoSchema","individual","object","shape","firstName","string","required","lastName","acceptCards","taxID","address1","cityName","postalCode","phoneNumber","matches","DOB","ssn","min","max","business","businessCategories","businessName","businessDescription","UserMainInfo","constructor","props","back","e","preventDefault","prevStep","doSignUp","data","setState","loader","post","then","res","error","message","window","location","href","catch","console","log","state","render","isAuthenticated","login","auth","initialValues","address2","websiteUrl","merchant","otherComponentData","values","setSubmitting","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","setFieldValue","submitForm","Object","keys","map","index","businessCategory","className","placeholder","name","momentObj","format","entries","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios';\n\nimport businessType from '../utils/businessType'\n\nimport { TextInput, Pane, Text, Select, Button, Spinner } from 'evergreen-ui'\n\nimport * as Yup from 'yup';\nimport { Formik, Form, Field } from 'formik';\nimport Datetime from 'react-datetime'\n\nimport ReactFlagsSelect from 'react-flags-select'\nimport 'react-flags-select/css/react-flags-select.css'\nimport Loader from './loader';\n\nconst phoneRegExp = /^\\+(?:[0-9] ?){6,14}[0-9]$/\nconst UserMainInfoSchema = {\n  individual: (\n    Yup.object().shape({\n      firstName: Yup.string()\n        .required('Please enter first name'),\n      lastName: Yup.string()\n        .required('Please enter last name'),\n      acceptCards: Yup.string()\n        .required('Please select payment mode information'),\n      taxID: Yup.string()\n        .required('Please enter tax ID'),\n      address1: Yup.string()\n        .required('Please enter first address'),\n      cityName: Yup.string()\n        .required('Please enter city name'),\n      postalCode: Yup.string()\n        .required('Please enter postal code'),\n      phoneNumber: Yup.string()\n        .required('Please enter phone number')\n        .matches(phoneRegExp, 'Phone number is not valid'),\n      DOB: Yup.string()\n        .required('Please select date of birth'),\n      ssn: Yup.string()\n        .min(4, 'You can not enter less than 4 char')\n        .max(4., 'you can not enter more than 4 char')\n        .required('Please enter postal code'),\n    })\n  ),\n  business: (\n\n    Yup.object().shape({\n      firstName: Yup.string()\n        .required('Please enter first name'),\n      lastName: Yup.string()\n        .required('Please enter last name'),\n      businessType: Yup.string()\n        .required('Please select type of the business'),\n      businessCategories: Yup.string()\n        .required('Please select category of the business'),\n      acceptCards: Yup.string()\n        .required('Please select payment mode information'),\n      businessName: Yup.string()\n        .required('Please enter business name'),\n      taxID: Yup.string()\n        .required('Please enter tax ID'),\n      address1: Yup.string()\n        .required('Please enter first address'),\n      cityName: Yup.string()\n        .required('Please enter city name'),\n      postalCode: Yup.string()\n        .required('Please enter postal code'),\n      businessDescription: Yup.string()\n        .required('Please enter business description'),\n      phoneNumber: Yup.string()\n        .required('Please enter phone number')\n        .matches(phoneRegExp, 'Phone number is not valid'),\n      DOB: Yup.string()\n        .required('Please select date of birth'),\n      ssn: Yup.string()\n        .min(4, 'You can not enter less than 4 char')\n        .max(4., 'you can not enter more than 4 char')\n        .required('Please enter postal code'),\n    })\n  )\n}\n\nexport class UserMainInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: '',\n      loader: false\n    }\n  }\n  back = e => {\n    e.preventDefault()\n    this.props.prevStep()\n  };\n\n  // generateTenants = () => {\n  // let data = JSON.parse(localStorage.getItem('data'));\n  // const user = {\n  //   \"apiKey\": data['UserInfo']['email'],\n  //   \"apiSecret\": data['UserInfo']['password']\n  // };\n\n  // const username = 'superadmin'\n  // const password = 'Sup3r4dm1n@2020!'\n  // const basicToken = Buffer.from(`${username}:${password}`, 'utf8').toString('base64')\n\n  // const tenantsHeaders = {\n  //   headers: { 'Authorization': `Basic ${basicToken}`, 'X-Killbill-CreatedBy': 'wso2-killbill' }\n  // }\n\n  // axios.post(`http://api.goeverpay.com:8080/1.0/kb/tenants`, user, tenantsHeaders)\n  //   .then(res => {\n  //     // this.saveSignUp();\n  //   }).catch(function (error) {\n  //     console.log('Error on Authentication');\n  //   });\n  // };\n\n  doSignUp = (data) => {\n    this.setState({\n      loader: true\n    })\n    // axios.post(`http://localhost:3001/users/sign-up`, data)\n    axios.post(`https://kwikpay-signup-api.herokuapp.com/users/sign-up`, data)\n      .then(res => {\n        this.setState({\n          loader: true\n        })\n\n        if (res.data.error) {\n          this.setState({ message: res.data.message })\n        } else {\n          window.location.href = 'https://upbeat-morse-c5a699.netlify.app/do-login'\n        }\n      })\n      .catch(function (error) {\n        this.setState({\n          loader: true\n        })\n        console.log('Error on Authentication');\n      });\n  }\n\n  // saveSignUp = () => {\n  //   const token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IlpqUm1ZVE13TlRKak9XVTVNbUl6TWpnek5ESTNZMkl5TW1JeVkyRXpNamRoWmpWaU1qYzBaZz09In0.eyJhdWQiOiJodHRwOlwvXC9vcmcud3NvMi5hcGltZ3RcL2dhdGV3YXkiLCJzdWIiOiJhZG1pbkBjYXJib24uc3VwZXIiLCJhcHBsaWNhdGlvbiI6eyJvd25lciI6ImFkbWluIiwidGllciI6IlVubGltaXRlZCIsIm5hbWUiOiJEZWZhdWx0QXBwbGljYXRpb24iLCJpZCI6MSwidXVpZCI6bnVsbH0sInNjb3BlIjoiYW1fYXBwbGljYXRpb25fc2NvcGUgZGVmYXVsdCIsImlzcyI6Imh0dHBzOlwvXC9sb2NhbGhvc3Q6OTQ0M1wvb2F1dGgyXC90b2tlbiIsInRpZXJJbmZvIjp7IlVubGltaXRlZCI6eyJzdG9wT25RdW90YVJlYWNoIjp0cnVlLCJzcGlrZUFycmVzdExpbWl0IjowLCJzcGlrZUFycmVzdFVuaXQiOm51bGx9fSwia2V5dHlwZSI6IlBST0RVQ1RJT04iLCJzdWJzY3JpYmVkQVBJcyI6W3sic3Vic2NyaWJlclRlbmFudERvbWFpbiI6ImNhcmJvbi5zdXBlciIsIm5hbWUiOiJLaWxsQmlsbCIsImNvbnRleHQiOiJcL2tpbGxiaWxsXC8xLjAiLCJwdWJsaXNoZXIiOiJhZG1pbiIsInZlcnNpb24iOiIxLjAiLCJzdWJzY3JpcHRpb25UaWVyIjoiVW5saW1pdGVkIn1dLCJjb25zdW1lcktleSI6ImpleGxVeVVvcmRqVGhqb0ZMazRSbEE2S0Jvb2EiLCJleHAiOjM3NDIzOTk0OTIsImlhdCI6MTU5NDkxNTg0NSwianRpIjoiM2U3YjVjYzQtMTIxZS00MGYzLWFhNmEtMTAxNDczOWUwYmQ5In0.ReaMROXD9GuvXsMFnaHNx2FUu9YRYUo-jXljSDCuzt_x2BVfHfhq0R5XAH1TwY_ipAYXdBWNG83FMEptQv4IRvgM_ZIh6gXOZLarqlKe6KrUdHG9heJQVedlCbMBXcqq8KFh9irj_ATa1hSQu0HzGYc12QRm3h84jufF-LPlGCUwtRdcaNWmYQmSeWuOVF_dJTSEISz4lrvLloqn66g5naY0QySs5oXT8s23ACnqw89aYYFWCcADriCiiVTggmLD1b2VsaqT6y6Ih_pMsarofEeQIuUF7HOTUymjXZoD1KBCZksFiJYJ8Jt7Fx0_DHPQ9aJx51IvyORhZT_R1K1GUg';\n  //   const headers = {\n  //     headers: {\n  //       'Authorization': `Bearer ${token}`,\n  //       'X-Killbill-ApiSecret': 'telecomUser',\n  //       'X-Killbill-ApiKey': 'telecomUser007',\n  //       'X-Killbill-CreatedBy': 'wso2-killbill',\n  //       'Access-Control-Allow-Origin': '*',\n  //       'Access-Control-Allow-Methods': 'POST'\n  //     }\n  //   }\n\n  //   let data = JSON.parse(localStorage.getItem('data'));\n  //   const mainData = {\n  //     \"name\": data['userMainInfo']['firstName'] + ' ' + data['userMainInfo']['lastName'],\n  //     \"firstNameLength\": data['userMainInfo']['firstName'].length,\n  //     \"email\": data['UserInfo']['email'],\n  //     \"address1\": data['userMainInfo']['address1'],\n  //     \"postalCode\": data['userMainInfo']['postalCode'],\n  //     \"city\": data['userMainInfo']['cityName'],\n  //     \"country\": data['UserInfo']['country'],\n  //     \"phone\": data['userMainInfo']['phoneNumber']\n  //   }\n\n  //   axios.post(`https://enki.goeverpay.com/1.0/kb/accounts`, mainData, headers)\n  //     .then(res => {\n  //       console.log(res);\n  //       console.log(res.data);\n  //     }).catch(function (error) {\n  //       console.log('Error on Authentication');\n  //     });\n  // }\n\n  render() {\n    const { isAuthenticated, login } = this.props.auth;\n    const initialValues = {\n      'individual': {\n        firstName: '', lastName: '', acceptCards: '',\n        taxID: '', address1: '', address2: '', cityName: '',\n        postalCode: '', phoneNumber: '', websiteUrl: '',\n        DOB: '', ssn: ''\n      },\n      'business': {\n        firstName: '', lastName: '', businessType: '',\n        businessCategories: '', acceptCards: '', businessName: '',\n        taxID: '', address1: '', address2: '', cityName: '',\n        postalCode: '', phoneNumber: '', websiteUrl: '', businessDescription: '',\n        DOB: '', ssn: ''\n      }\n    }\n    const { merchant: { businessType, individual } } = this.props.otherComponentData\n    console.log('-----this.props--', this.props.otherComponentData, individual)\n\n    return (\n      <div className='signUpForm'>\n        <Loader\n          loading={this.state.loader} />\n        <Formik\n          initialValues={initialValues[businessType]}\n          validationSchema={UserMainInfoSchema[businessType]}\n          onSubmit={(values, { setSubmitting }) => {\n            setSubmitting(false);\n          }}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n            setFieldValue,\n            submitForm,\n          }) => (\n              <form\n                autoComplete=\"off\"\n                onSubmit={handleSubmit}\n              >\n                {/* Form Body  */}\n                <div className='signUpBody'>\n                  <Pane\n                    className='row'\n                    display='flex'\n                    flexWrap='wrap'\n                  >\n                    <div className='col-6'>\n                      <Text size={300} lineHeight='23px' fontWeight='500'>First Name</Text>\n                      <TextInput\n                        height={40}\n                        width='100%'\n                        name='firstName'\n                        placeholder='First Name'\n                        type='text'\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.firstName}\n                        isInvalid={errors.firstName && touched.firstName ? true : false}\n                      />\n                      {errors.firstName && touched.firstName ? (\n                        <span className=\"error_span\">{errors.firstName}</span>\n                      ) : null}\n                    </div>\n                    <div className='col-6'>\n                      <Text size={300} lineHeight='23px' fontWeight='500'>Last Name</Text>\n                      <TextInput\n                        height={40}\n                        width='100%'\n                        name='lastName'\n                        placeholder='Last Name'\n                        type='text'\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.lastName}\n                        isInvalid={errors.lastName && touched.lastName ? true : false}\n                      />\n                      {errors.lastName && touched.lastName ? (\n                        <span className=\"error_span\">{errors.lastName}</span>\n                      ) : null}\n                    </div>\n                    {!individual ? (\n\n                      <div className='col-6'>\n                        <Text size={300} lineHeight='23px' fontWeight='500'>Business Type</Text>\n                        <div>\n                          <Select\n                            width='100%'\n                            height={40}\n                            name='businessType'\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.businessType}\n                            isInvalid={errors.businessType && touched.businessType ? true : false}\n                          >\n                            <option value=''>Select business type...</option>\n                            {Object.keys(businessType).map((business, index) => {\n                              return (\n                                <option value={business} key={index}>{business}</option>\n                              )\n                            })}\n                          </Select>\n                          {errors.businessType && touched.businessType ? (\n                            <span className=\"error_span\">{errors.businessType}</span>\n                          ) : null}\n                        </div>\n                      </div>\n                    ) : null}\n                    {!individual ? (\n\n                      <div className='col-6'>\n                        <Text size={300} lineHeight='23px' fontWeight='500'>Business Categories</Text>\n                        <div>\n                          <Select\n                            width='100%'\n                            height={40}\n                            name='businessCategories'\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.businessCategories}\n                            isInvalid={errors.businessCategories && touched.businessCategories ? true : false}\n                          >\n                            <option value=''>Select business category...</option>\n                            {values.businessType && businessType[values.businessType].map((businessCategory, index) => {\n                              return (\n                                <option value={businessCategory} key={index}>{businessCategory}</option>\n                              )\n                            })}\n                          </Select>\n                          {errors.businessCategories && touched.businessCategories ? (\n                            <span className=\"error_span\">{errors.businessCategories}</span>\n                          ) : null}\n                        </div>\n                      </div>\n                    ) : null}\n                    <div className='col-6'>\n                      <Text size={300} lineHeight='23px' fontWeight='500'>Do you currently accept debit or credit?</Text>\n                      <div>\n                        <Select\n                          width='100%'\n                          height={40}\n                          name='acceptCards'\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.acceptCards}\n                          isInvalid={errors.acceptCards && touched.acceptCards ? true : false}\n                        >\n                          <option value=''>Please select...</option>\n                          <option value='Yes'>Yes, we accept credit cards</option>\n                          <option value='No'>No, we do not accept credit cards</option>\n                        </Select>\n                        {errors.acceptCards && touched.acceptCards ? (\n                          <span className=\"error_span\">{errors.acceptCards}</span>\n                        ) : null}\n                      </div>\n                    </div>\n                    {!individual ? (\n\n                      <div className='col-6'>\n                        <Text size={300} lineHeight='23px' fontWeight='500'>Business Name</Text>\n                        <TextInput\n                          height={40}\n                          width='100%'\n                          name='businessName'\n                          placeholder='Business Name'\n                          type='text'\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.businessName}\n                          isInvalid={errors.businessName && touched.businessName ? true : false}\n                        />\n                        {errors.businessName && touched.businessName ? (\n                          <span className=\"error_span\">{errors.businessName}</span>\n                        ) : null}\n                      </div>\n                    ) : null}\n                    <div className='col-6'>\n                      <Text size={300} lineHeight='23px' fontWeight='500'>Tax ID</Text>\n                      <TextInput\n                        height={40}\n                        width='100%'\n                        name='taxID'\n                        placeholder='Tax ID'\n                        type='text'\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.taxID}\n                        isInvalid={errors.taxID && touched.taxID ? true : false}\n                      />\n                      {errors.taxID && touched.taxID ? (\n                        <span className=\"error_span\">{errors.taxID}</span>\n                      ) : null}\n                    </div>\n                    <div className='col-6'>\n                      <Text size={300} lineHeight='23px' fontWeight='500'>Address 1</Text>\n                      <TextInput\n                        height={40}\n                        width='100%'\n                        name='address1'\n                        placeholder='Address 1'\n                        type='text'\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.address1}\n                        isInvalid={errors.address1 && touched.address1 ? true : false}\n                      />\n                      {errors.address1 && touched.address1 ? (\n                        <span className=\"error_span\">{errors.address1}</span>\n                      ) : null}\n                    </div>\n                    <div className='col-6'>\n                      <Text size={300} lineHeight='23px' fontWeight='500'>Address 2</Text>\n                      <TextInput\n                        height={40}\n                        width='100%'\n                        name='address2'\n                        placeholder='Address 2 (Optional)'\n                        type='text'\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.address2}\n                      />\n                    </div>\n                    <div className='col-6'>\n                      <Text size={300} lineHeight='23px' fontWeight='500'>City</Text>\n                      <TextInput\n                        height={40}\n                        width='100%'\n                        name='cityName'\n                        placeholder='City'\n                        type='text'\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.cityName}\n                        isInvalid={errors.cityName && touched.cityName ? true : false}\n                      />\n                      {errors.cityName && touched.cityName ? (\n                        <span className=\"error_span\">{errors.cityName}</span>\n                      ) : null}\n                    </div>\n                    <div className='col-6'>\n                      <Text size={300} lineHeight='23px' fontWeight='500'>Postal Code</Text>\n                      <TextInput\n                        height={40}\n                        width='100%'\n                        name='postalCode'\n                        placeholder='Postal Code'\n                        type='text'\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.postalCode}\n                        isInvalid={errors.postalCode && touched.postalCode ? true : false}\n                      />\n                      {errors.postalCode && touched.postalCode ? (\n                        <span className=\"error_span\">{errors.postalCode}</span>\n                      ) : null}\n                    </div>\n                    <div className='col-6'>\n                      <Text size={300} lineHeight='23px' fontWeight='500'>Phone Number</Text>\n                      <TextInput\n                        height={40}\n                        width='100%'\n                        name='phoneNumber'\n                        placeholder='Phone Number'\n                        type='text'\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.phoneNumber}\n                        isInvalid={errors.phoneNumber && touched.phoneNumber ? true : false}\n                      />\n                      {errors.phoneNumber && touched.phoneNumber ? (\n                        <span className=\"error_span\">{errors.phoneNumber}</span>\n                      ) : null}\n                    </div>\n                    <div className='col-6'>\n                      <Text size={300} lineHeight='23px' fontWeight='500'>Website</Text>\n                      <TextInput\n                        className='everGreenInput'\n                        height={40}\n                        width='100%'\n                        name='websiteUrl'\n                        placeholder='Website (Optional)'\n                        type='text'\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.websiteUrl}\n                      />\n                    </div>\n                    {!individual ? (\n\n                      <div className='col-6'>\n                        <Text size={300} lineHeight='23px' fontWeight='500'>Business Description</Text>\n                        <TextInput\n                          height={40}\n                          width='100%'\n                          name='businessDescription'\n                          placeholder='Business Description'\n                          type='text'\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.businessDescription}\n                          isInvalid={errors.businessDescription && touched.businessDescription ? true : false}\n                        />\n                        {errors.businessDescription && touched.businessDescription ? (\n                          <span className=\"error_span\">{errors.businessDescription}</span>\n                        ) : null}\n                      </div>\n                    ) : null}\n                    <div className='col-6'>\n                      <Text size={300} lineHeight='23px' fontWeight='500'>Date of Birth</Text>\n                      <Datetime\n                        inputProps={{ className: 'everGreenDate flag-select', placeholder: ' MM/DD/YYYY', name: 'DOB' }}\n                        dateFormat=\"MM/DD/YYYY\"\n                        timeFormat={false}\n                        height={40}\n                        width='100%'\n                        onChange={(momentObj) => {\n                          if (typeof momentObj === 'object') {\n                            setFieldValue('DOB', momentObj.format(\"MM/DD/YYYY\"));\n                          } else {\n                            setFieldValue('DOB', '');\n                          }\n                        }}\n                        value={values.DOB}\n                        isInvalid={errors.DOB && touched.DOB ? true : false}\n                      />\n                      {errors.DOB && touched.DOB ? (\n                        <span className=\"error_span\">{errors.DOB}</span>\n                      ) : null}\n                    </div>\n                    <div className='col-6'>\n                      <Text size={300} lineHeight='23px' fontWeight='500'>Last 4 digit of SSN or ITIN</Text>\n                      <TextInput\n                        height={40}\n                        width='100%'\n                        name='ssn'\n                        placeholder='Last 4 digit of SSN or ITIN'\n                        type='text'\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.ssn}\n                        isInvalid={errors.ssn && touched.ssn ? true : false}\n                      />\n                      {errors.ssn && touched.ssn ? (\n                        <span className=\"error_span\">{errors.ssn}</span>\n                      ) : null}\n                    </div>\n                  </Pane>\n                </div>\n\n                {/* Form Footer  */}\n                <div className='signUpFooter'>\n                  {this.state.message && (\n                    <div className=\"text-center textn-danger\">\n                      {this.state.message}\n                    </div>)\n                  }\n                  <Pane\n                    className='row'\n                    display='flex'\n                    alignItems='center'\n                    flexWrap='wrap'\n                    justifyContent='space-between'\n                  >\n                    <div className='col-4'>\n                      <Button className='btnMain' width='100%' height={40} justifyContent='center' appearance='primary' textTransform='uppercase' onClick={this.back}>Back</Button>\n                    </div>\n                    <div className='col-4'>\n                      <Button\n                        className='btnMain'\n                        width='100%'\n                        height={40}\n                        justifyContent='center'\n                        appearance='primary'\n                        textTransform='uppercase'\n                        onClick={(e) => {\n                          e.preventDefault();\n                          submitForm();\n                          if (Object.entries(errors).length == 0) {\n                            let data = this.props.otherComponentData\n                            data['userMainInfo'] = values;\n                            // localStorage.setItem(\"data\", JSON.stringify(data));\n                            this.doSignUp(data);\n                          }\n                        }}\n                      >\n                        Sign Up\n                    </Button>\n                    </div>\n                  </Pane>\n                </div>\n              </form>\n            )}\n        </Formik>\n      </div>\n    )\n  }\n}\n\nexport default UserMainInfo\n"]},"metadata":{},"sourceType":"module"}